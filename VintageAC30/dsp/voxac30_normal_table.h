
// voxac30_normal_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  55.302671
 // --table_op  1.000000

struct tablevoxac30_normal { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevoxac30_normal_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevoxac30_normal&() const { return *(tablevoxac30_normal*)this; }
};

 static tablevoxac30_normal_imp<200> voxac30_normal_table = {
	0,-0.833333,142.143,200, {
	0.000000000000,-0.001993355943,-0.006218170828,-0.010710071375,-0.015237325918,
	-0.019772559560,-0.024312512676,-0.028856771430,-0.033405257697,-0.037957932845,
	-0.042514762768,-0.047075713753,-0.051640751994,-0.056209843521,-0.060782954193,
	-0.065360049688,-0.069941095499,-0.074526056927,-0.079114899073,-0.083707586834,
	-0.088304084895,-0.092904357725,-0.097508369567,-0.102116084433,-0.106727466098,
	-0.111342478092,-0.115961083691,-0.120583245916,-0.125208927517,-0.129838090976,
	-0.134470698490,-0.139106711968,-0.143746093025,-0.148388802971,-0.153034802803,
	-0.157684053199,-0.162336514511,-0.166992146751,-0.171650909588,-0.176312762340,
	-0.180977663959,-0.185645573029,-0.190316447754,-0.194990245946,-0.199666925021,
	-0.204346441989,-0.209028753438,-0.213713815533,-0.218401583998,-0.223092014110,
	-0.227785060691,-0.232480678091,-0.237178820181,-0.241879440342,-0.246582491453,
	-0.251287925881,-0.255995695465,-0.260705751509,-0.265418044767,-0.270132525432,
	-0.274849143121,-0.279567846863,-0.284288585088,-0.289011305609,-0.293735955611,
	-0.298462481636,-0.303190829566,-0.307920944613,-0.312652771299,-0.317386253440,
	-0.322121334133,-0.326857955737,-0.331596059857,-0.336335587323,-0.341076478178,
	-0.345818671653,-0.350562106152,-0.355306719230,-0.360052447573,-0.364799226977,
	-0.369546992328,-0.374295677577,-0.379045215719,-0.383795538766,-0.388546577726,
	-0.393298262579,-0.398050522242,-0.402803284553,-0.407556476234,-0.412310022867,
	-0.417063848862,-0.421817877425,-0.426572030527,-0.431326228870,-0.436080391851,
	-0.440834437526,-0.445588282575,-0.450341842259,-0.455095030382,-0.459847759247,
	-0.464599939616,-0.469351480659,-0.474102289909,-0.478852273214,-0.483601334682,
	-0.488349376633,-0.493096299538,-0.497842001962,-0.502538549910,-0.507129267681,
	-0.511627037229,-0.516062479695,-0.520449130292,-0.524794450856,-0.529103343357,
	-0.533379358470,-0.537625220407,-0.541843100542,-0.546034777800,-0.550201740265,
	-0.554345253258,-0.558466406935,-0.562566150721,-0.566645318930,-0.570704650267,
	-0.574744802969,-0.578766366774,-0.582769872498,-0.586755799834,-0.590724583726,
	-0.594676619688,-0.598612268233,-0.602531858627,-0.606435692071,-0.610324044428,
	-0.614197168568,-0.618055296409,-0.621898640675,-0.625727396450,-0.629541742531,
	-0.633341842626,-0.637127846409,-0.640899890463,-0.644658099107,-0.648402585147,
	-0.652133450541,-0.655850786990,-0.659554676481,-0.663245191766,-0.666922396792,
	-0.670586347102,-0.674237090180,-0.677874665778,-0.681499106201,-0.685110436575,
	-0.688708675081,-0.692293833174,-0.695865915780,-0.699424921472,-0.702970842639,
	-0.706503665632,-0.710023370885,-0.713529933066,-0.717023321169,-0.720503498624,
	-0.723970423393,-0.727424048054,-0.730864319884,-0.734291180934,-0.737704568096,
	-0.741104413172,-0.744490642934,-0.747863179181,-0.751221938799,-0.754566833813,
	-0.757897771441,-0.761214654147,-0.764517379694,-0.767805841200,-0.771079927188,
	-0.774339521648,-0.777584504091,-0.780814749612,-0.784030128959,-0.787230508594,
	-0.790415750772,-0.793585713616,-0.796740251202,-0.799879213644,-0.803002447194,
	-0.806109794341,-0.809201093921,-0.812276181232,-0.815334888161,-0.818377043316,
	-0.821402472170,-0.824410997206,-0.827402438086,-0.830376611815,-0.833333332925
	}
};

double always_inline voxac30_normalclip(double x) {
    double f = fabs(x);
    f = f * voxac30_normal_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = voxac30_normal_table.data[0];
    } else if (i >= voxac30_normal_table.size-1) {
        f = voxac30_normal_table.data[voxac30_normal_table.size-1];
    } else {
    f -= i;
    f = voxac30_normal_table.data[i]*(1-f) + voxac30_normal_table.data[i+1]*f;
    }
    return copysign(f, x);
}

