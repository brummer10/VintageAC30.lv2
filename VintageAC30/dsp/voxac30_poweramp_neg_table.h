
// voxac30_poweramp_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.400000
 // --table_div  1.000000
 // --table_op  1.000000

struct tablevoxac30_poweramp_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevoxac30_poweramp_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevoxac30_poweramp_neg&() const { return *(tablevoxac30_poweramp_neg*)this; }
};

 static tablevoxac30_poweramp_neg_imp<200> voxac30_poweramp_neg_table = {
	0,-0.70882,142.143,200, {
	0.000000000000,-0.009398039896,-0.018701998342,-0.027913428436,-0.037031864602,
	-0.046059013170,-0.054995137820,-0.063841251511,-0.072597270308,-0.081264714245,
	-0.089844230009,-0.098335988616,-0.106740663876,-0.115059746051,-0.123292870267,
	-0.131441853446,-0.139506317879,-0.147487447393,-0.155385341961,-0.163200887648,
	-0.170935700211,-0.178589015617,-0.186162339087,-0.193656040705,-0.201070891722,
	-0.208406846767,-0.215665644268,-0.222847124503,-0.229951890768,-0.236981118913,
	-0.243935025443,-0.250813887978,-0.257619001874,-0.264350419922,-0.271009026619,
	-0.277595013991,-0.284109226661,-0.290552378196,-0.296925038274,-0.303227380733,
	-0.309460475837,-0.315624259441,-0.321720300359,-0.327747746021,-0.333708271384,
	-0.339602070890,-0.345429772366,-0.351191458467,-0.356888671959,-0.362520507420,
	-0.368088796735,-0.373593086697,-0.379034558544,-0.384413564199,-0.389730449038,
	-0.394986007595,-0.400180145429,-0.405313857831,-0.410387718788,-0.415402063896,
	-0.420357251802,-0.425253708265,-0.430092308699,-0.434873223508,-0.439597075339,
	-0.444264094403,-0.448875010072,-0.453430227266,-0.457930100296,-0.462375092233,
	-0.466765776189,-0.471102461626,-0.475385797326,-0.479615988763,-0.483793705906,
	-0.487919196283,-0.491992964118,-0.496015429264,-0.499987031362,-0.503908125422,
	-0.507779254433,-0.511600821483,-0.515373211587,-0.519096587581,-0.522771913704,
	-0.526398969057,-0.529978689272,-0.533511145099,-0.536996868206,-0.540436129202,
	-0.543829447124,-0.547177234257,-0.550479653029,-0.553737346199,-0.556950500584,
	-0.560119651665,-0.563244978839,-0.566327072622,-0.569366126845,-0.572362679173,
	-0.575316878152,-0.578229219886,-0.581100029754,-0.583929659973,-0.586718525679,
	-0.589466829144,-0.592175017722,-0.594843424682,-0.597472354159,-0.600062198704,
	-0.602613291121,-0.605125915521,-0.607600389689,-0.610037130653,-0.612436399097,
	-0.614798534021,-0.617123846430,-0.619412661268,-0.621665255487,-0.623882068729,
	-0.626063288393,-0.628209175571,-0.630320217257,-0.632396614150,-0.634438610577,
	-0.636446599965,-0.638420826872,-0.640361634432,-0.642269272008,-0.644144040591,
	-0.645986248157,-0.647796126461,-0.649574014009,-0.651320186764,-0.653034901246,
	-0.654718453356,-0.656371094985,-0.657993108645,-0.659584766952,-0.661146349303,
	-0.662678124674,-0.664180329564,-0.665653255332,-0.667097156722,-0.668512273667,
	-0.669898871362,-0.671257211536,-0.672587540001,-0.673890131759,-0.675165197637,
	-0.676413001987,-0.677633796062,-0.678827808879,-0.679995287006,-0.681136474188,
	-0.682251609629,-0.683340938500,-0.684404660336,-0.685443039780,-0.686456284689,
	-0.687444638112,-0.688408329559,-0.689347571082,-0.690262589924,-0.691153606342,
	-0.692020855349,-0.692864530749,-0.693684865138,-0.694482074527,-0.695256357896,
	-0.696007945080,-0.696737029997,-0.697443829995,-0.698128548422,-0.698791384464,
	-0.699432553898,-0.700052248692,-0.700650672545,-0.701228024060,-0.701784501900,
	-0.702320296696,-0.702835605654,-0.703330623772,-0.703805537167,-0.704260537081,
	-0.704695814056,-0.705111552612,-0.705507937062,-0.705885152012,-0.706243379391,
	-0.706582801475,-0.706903596671,-0.707205943239,-0.707490015833,-0.707755992888,
	-0.708004046348,-0.708234349004,-0.708447072742,-0.708642386511,-0.708820459375
	}
};

double always_inline voxac30_poweramp_negclip(double x) {
    double f = fabs(x);
    f = f * voxac30_poweramp_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = voxac30_poweramp_neg_table.data[0];
    } else if (i >= voxac30_poweramp_neg_table.size-1) {
        f = voxac30_poweramp_neg_table.data[voxac30_poweramp_neg_table.size-1];
    } else {
    f -= i;
    f = voxac30_poweramp_neg_table.data[i]*(1-f) + voxac30_poweramp_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

