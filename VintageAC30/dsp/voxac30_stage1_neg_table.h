
// voxac30_stage1_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.000000
 // --table_div  10.036549
 // --table_op  0.300000

struct tablevoxac30_stage1_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevoxac30_stage1_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevoxac30_stage1_neg&() const { return *(tablevoxac30_stage1_neg*)this; }
};

 static tablevoxac30_stage1_neg_imp<200> voxac30_stage1_neg_table = {
	0,0.720787,59.7,200, {
	0.000000000000,0.013601906542,0.039985734544,0.063834375905,0.084652226966,
	0.103237772145,0.120246708448,0.136125006997,0.151167836907,0.165570160002,
	0.179461219576,0.192927248701,0.206026332078,0.218798122545,0.231270192771,
	0.243462187529,0.255388538418,0.267060238957,0.278486005510,0.289673036733,
	0.300627510603,0.311354909873,0.321860235370,0.332148145971,0.342223050616,
	0.352089168976,0.361750571606,0.371211206680,0.380474917941,0.389545456910,
	0.398426491311,0.407121611037,0.415634332479,0.423968101795,0.432126297459,
	0.440112232344,0.447929155494,0.455580253670,0.463068652757,0.470397419066,
	0.477569560556,0.484588028007,0.491455716140,0.498175464711,0.504750059567,
	0.511182233681,0.517474668163,0.523629993244,0.529650789249,0.535539587539,
	0.541298871447,0.546931077183,0.552438594731,0.557823768724,0.563088899305,
	0.568236242970,0.573268013394,0.578186382243,0.582993479971,0.587691396598,
	0.592282182482,0.596767849062,0.601150369603,0.605431679915,0.609613679064,
	0.613698230068,0.617687160577,0.621582263549,0.625385297901,0.629097989157,
	0.632722030080,0.636259081291,0.639710771879,0.643078700000,0.646364433457,
	0.649569510281,0.652695439292,0.655743700651,0.658715746405,0.661613001017,
	0.664436861890,0.667188699878,0.669869859790,0.672481660881,0.675025397336,
	0.677502338749,0.679913730580,0.682260794620,0.684544729433,0.686766710799,
	0.688927892145,0.691029404965,0.693072359238,0.695057843834,0.696986926914,
	0.698860656320,0.700680059962,0.702446146192,0.704159904176,0.705822304259,
	0.707434298313,0.708996820098,0.710510785594,0.711977093342,0.713396624775,
	0.714770244539,0.716098800811,0.717383125609,0.718624035102,0.719822329904,
	0.720978795372,0.722094201892,0.723169305164,0.724204846476,0.725201552983,
	0.726160137967,0.727081301101,0.727965728711,0.728814094020,0.729627057402,
	0.730405266624,0.731149357079,0.731859952027,0.732537662818,0.733183089121,
	0.733796819143,0.734379429844,0.734931487153,0.735453546171,0.735946151383,
	0.736409836850,0.736845126411,0.737252533875,0.737632563210,0.737985708728,
	0.738312455267,0.738613278373,0.738888644470,0.739139011038,0.739364826775,
	0.739566531771,0.739744557661,0.739899327792,0.740031257376,0.740140753644,
	0.740228215994,0.740294036144,0.740338598273,0.740362279163,0.740365448340,
	0.740348468209,0.740311694191,0.740255474852,0.740180152031,0.740086060973,
	0.739973530446,0.739842882865,0.739694434416,0.739528495168,0.739345369189,
	0.739145354663,0.738928743996,0.738695823926,0.738446875632,0.738182174838,
	0.737901991912,0.737606591971,0.737296234978,0.736971175840,0.736631664503,
	0.736277946043,0.735910260760,0.735528844268,0.735133927583,0.734725737207,
	0.734304495217,0.733870419344,0.733423723058,0.732964615647,0.732493302294,
	0.732009984158,0.731514858445,0.731008118487,0.730489953811,0.729960550212,
	0.729420089823,0.728868751185,0.728306709313,0.727734135762,0.727151198694,
	0.726558062940,0.725954890061,0.725341838416,0.724719063214,0.724086716578,
	0.723444947603,0.722793902410,0.722133724204,0.721464553330,0.720786527323
	}
};

double always_inline voxac30_stage1_negclip(double x) {
    double f = fabs(x);
    f = f * voxac30_stage1_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = voxac30_stage1_neg_table.data[0];
    } else if (i >= voxac30_stage1_neg_table.size-1) {
        f = voxac30_stage1_neg_table.data[voxac30_stage1_neg_table.size-1];
    } else {
    f -= i;
    f = voxac30_stage1_neg_table.data[i]*(1-f) + voxac30_stage1_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

