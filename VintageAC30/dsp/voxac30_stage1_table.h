
// voxac30_stage1_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.000000
 // --table_div  10.036549
 // --table_op  0.300000

struct tablevoxac30_stage1 { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevoxac30_stage1_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevoxac30_stage1&() const { return *(tablevoxac30_stage1*)this; }
};

 static tablevoxac30_stage1_imp<200> voxac30_stage1_table = {
	0,-0.833333,59.7,200, {
	0.000000000000,-0.013608300429,-0.040045988686,-0.064001969154,-0.084970422554,
	-0.103743173185,-0.120971916087,-0.137100043265,-0.152420946485,-0.167128282445,
	-0.181350274446,-0.195172311395,-0.208651745031,-0.221827567915,-0.234726741952,
	-0.247368336559,-0.259766234645,-0.271930902201,-0.283870545637,-0.295591868856,
	-0.307100568625,-0.318401658851,-0.329499683013,-0.340398853448,-0.351103142842,
	-0.361616344445,-0.371942111851,-0.382083985411,-0.392045409892,-0.401829746419,
	-0.411440280667,-0.420880228591,-0.430152740556,-0.439260904391,-0.448207747751,
	-0.456996240018,-0.465629293886,-0.474109766737,-0.482440461880,-0.490624129688,
	-0.498663468661,-0.506561126438,-0.514319700775,-0.521941740479,-0.529429746331,
	-0.536786171971,-0.544013424771,-0.551113866690,-0.558089815109,-0.564943543646,
	-0.571677282966,-0.578293221562,-0.584793506532,-0.591180244335,-0.597455501538,
	-0.603621305543,-0.609679645306,-0.615632472040,-0.621481699904,-0.627229206682,
	-0.632876834447,-0.638426390212,-0.643879646573,-0.649238342335,-0.654504183132,
	-0.659678842025,-0.664763960104,-0.669761147065,-0.674671981784,-0.679498012876,
	-0.684240759249,-0.688901710639,-0.693482328145,-0.697984044745,-0.702408265809,
	-0.706756369598,-0.711029707754,-0.715229605783,-0.719357363530,-0.723414255637,
	-0.727401532002,-0.731320418224,-0.735172116042,-0.738957803760,-0.742678636675,
	-0.746335747483,-0.749930246687,-0.753463222997,-0.756935743715,-0.760348855118,
	-0.763703582837,-0.767000932218,-0.770241888688,-0.773427418104,-0.776558467102,
	-0.779635963435,-0.782660816306,-0.785633916697,-0.788556137683,-0.791428334753,
	-0.794251346110,-0.797025992978,-0.799753079893,-0.802433394993,-0.805067710305,
	-0.807656782016,-0.810201350749,-0.812702141828,-0.815159865542,-0.817575217392,
	-0.819948878352,-0.822281515105,-0.824573780286,-0.826826312715,-0.829039737631,
	-0.831214666909,-0.833351699285,-0.835451420571,-0.837514403861,-0.839541209738,
	-0.841532386478,-0.843488470241,-0.845409985264,-0.847297444052,-0.849151347555,
	-0.850972185349,-0.852760435810,-0.854516566285,-0.856241033253,-0.857934282493,
	-0.859596749234,-0.861228858314,-0.862831024324,-0.864403651757,-0.865947135148,
	-0.867461859209,-0.868948198963,-0.870406519874,-0.871837177973,-0.873240519974,
	-0.874616883400,-0.875966596689,-0.877289979306,-0.878587341853,-0.879858986165,
	-0.881105205413,-0.882326284195,-0.883522498632,-0.884694116447,-0.885841397059,
	-0.886964591652,-0.887778750065,-0.888011881968,-0.887838509429,-0.887477132951,
	-0.887006981442,-0.886459939065,-0.885850466872,-0.885185859227,-0.884470305232,
	-0.883706647622,-0.882897167421,-0.882043927643,-0.881148912970,-0.880214076235,
	-0.879241344614,-0.878232610575,-0.877189719095,-0.876114455977,-0.875008538977,
	-0.873873611967,-0.872711241780,-0.871522917196,-0.870310049536,-0.869073974385,
	-0.867815954082,-0.866537180673,-0.865238779130,-0.863921810680,-0.862587276128,
	-0.861236119124,-0.859869229299,-0.858487445275,-0.857091557506,-0.855682310965,
	-0.854260407661,-0.852826509004,-0.851381238007,-0.849925181356,-0.848458891336,
	-0.846982887628,-0.845497658989,-0.844003664829,-0.842501336668,-0.840991079515,
	-0.839473273150,-0.837948273323,-0.836416412885,-0.834878002839,-0.833333333336
	}
};

double always_inline voxac30_stage1clip(double x) {
    double f = fabs(x);
    f = f * voxac30_stage1_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = voxac30_stage1_table.data[0];
    } else if (i >= voxac30_stage1_table.size-1) {
        f = voxac30_stage1_table.data[voxac30_stage1_table.size-1];
    } else {
    f -= i;
    f = voxac30_stage1_table.data[i]*(1-f) + voxac30_stage1_table.data[i+1]*f;
    }
    return copysign(f, x);
}

