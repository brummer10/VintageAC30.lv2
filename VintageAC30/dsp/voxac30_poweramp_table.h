
// voxac30_poweramp_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  1.000000
 // --table_op  1.000000

struct tablevoxac30_poweramp { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevoxac30_poweramp_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevoxac30_poweramp&() const { return *(tablevoxac30_poweramp*)this; }
};

 static tablevoxac30_poweramp_imp<200> voxac30_poweramp_table = {
	0,0.706525,142.143,200, {
	0.000000000000,0.009397650720,0.018700591172,0.027909921482,0.037025174155,
	0.046049185854,0.054980572429,0.063821243501,0.072571680153,0.081232500786,
	0.089804505173,0.098288380133,0.106684805884,0.114994676143,0.123218069464,
	0.131356103055,0.139410103438,0.147379421396,0.155265411333,0.163069197413,
	0.170790911856,0.178430694243,0.185990585014,0.193469827471,0.200869823107,
	0.208190750214,0.215434245532,0.222599914297,0.229689031432,0.236701228045,
	0.243638114742,0.250499860180,0.257287348184,0.264001169620,0.270641654206,
	0.277209504886,0.283705356647,0.290129753179,0.296483467508,0.302766738023,
	0.308980210539,0.315124548797,0.321200733626,0.327208632545,0.333149129554,
	0.339022464992,0.344829837821,0.350571312418,0.356247510586,0.361858907738,
	0.367406436912,0.372889998544,0.378310547560,0.383668474591,0.388964230573,
	0.394198696275,0.399371826497,0.404484488623,0.409537097294,0.414530144597,
	0.419464235572,0.424339577236,0.429156908474,0.433916571405,0.438619359746,
	0.443265410780,0.447855155624,0.452389134967,0.456868089008,0.461292121763,
	0.465661996219,0.469977935310,0.474240406533,0.478450044844,0.482607062819,
	0.486712128972,0.490765434603,0.494767605182,0.498719066120,0.502620176849,
	0.506471331988,0.510272940941,0.514025534882,0.517729418876,0.521385204745,
	0.524992972641,0.528553435404,0.532066833402,0.535533566930,0.538954151445,
	0.542328806594,0.545658067538,0.548942272813,0.552181828360,0.555377024575,
	0.558528348862,0.561636161787,0.564700772491,0.567722588719,0.570701946155,
	0.573639336741,0.576534958964,0.579389207938,0.582202528749,0.584975152364,
	0.587707536150,0.590399966022,0.593052804412,0.595666408160,0.598241072090,
	0.600777187792,0.603275064175,0.605735030666,0.608157444687,0.610542589653,
	0.612890788179,0.615202418005,0.617477727181,0.619717109628,0.621920812671,
	0.624089172983,0.626222523162,0.628321112803,0.630385300174,0.632415362896,
	0.634411611449,0.636374318972,0.638303831482,0.640200396272,0.642064318323,
	0.643895898364,0.645695373882,0.647463100002,0.649199312087,0.650904302165,
	0.652578334295,0.654221725417,0.655834699399,0.657417537703,0.658970524557,
	0.660493914707,0.661987999163,0.663452996087,0.664889188978,0.666296856303,
	0.667676217621,0.669027545344,0.670351085428,0.671647102106,0.672915838921,
	0.674157530768,0.675372435187,0.676560780528,0.677722814929,0.678858787287,
	0.679968917451,0.681053459382,0.682112633047,0.683146665833,0.684155796334,
	0.685140250745,0.686100255611,0.687036033458,0.687947807164,0.688835797715,
	0.689700220857,0.690541303484,0.691359250632,0.692154280609,0.692926604912,
	0.693676432624,0.694403976348,0.695109444903,0.695793032792,0.696454956429,
	0.697095410665,0.697714598704,0.698312720197,0.698889971332,0.699446550483,
	0.699982648774,0.700498462218,0.700994179962,0.701469994499,0.701926090056,
	0.702362657816,0.702779881132,0.703177944291,0.703557030385,0.703917319537,
	0.704258992249,0.704582225502,0.704887197469,0.705174083269,0.705443056417,
	0.705694289441,0.705927953793,0.706144219992,0.706343255762,0.706525228656
	}
};

double always_inline voxac30_powerampclip(double x) {
    double f = fabs(x);
    f = f * voxac30_poweramp_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = voxac30_poweramp_table.data[0];
    } else if (i >= voxac30_poweramp_table.size-1) {
        f = voxac30_poweramp_table.data[voxac30_poweramp_table.size-1];
    } else {
    f -= i;
    f = voxac30_poweramp_table.data[i]*(1-f) + voxac30_poweramp_table.data[i+1]*f;
    }
    return copysign(f, x);
}

